; ===================================================================
; PlatformIO Project Configuration File for Chigee OBD2 Module
; Professional ESP32 Development Environment - FIXED VERSION
; ===================================================================

[platformio]
default_envs = esp32_production
extra_configs = 
    platformio_*.ini

; ===== PRODUCTION ENVIRONMENT =====
[env:esp32_production]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = -DCORE_DEBUG_LEVEL=3

; Source file for production
build_src_filter = 
    +<main.cpp>
    +<modules/>
    +<config/>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<tests/>

; ===== ELM327 COMPATIBILITY TEST =====
[env:esp32_elm327_test]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = -DCORE_DEBUG_LEVEL=3

; ELM327 compatibility test
build_src_filter = 
    +<test_elm327.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== SIMPLE SCANNER ENVIRONMENT =====
[env:esp32_simple_scanner]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = -DCORE_DEBUG_LEVEL=3

; Simple Bluetooth scanner
build_src_filter = 
    +<simple_scanner.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<bluetooth_scanner.cpp>
    -<dual_protocol_server.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== XR-2 BLUETOOTH SCANNER =====
[env:esp32_xr2_scanner]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=3

; Scan for XR-2 Bluetooth devices and analyze pairing behavior
build_src_filter = 
    +<xr2_scanner.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<dual_protocol_server.cpp>
    -<compact_dual_server.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<xr2_rssi_tracker.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== SIMPLE CHIGEE BLUETOOTH SERVER =====
[env:esp32_simple_chigee]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=3

; Simple Bluetooth server with CHIGEE name for XR-2 testing
build_src_filter = 
    +<simple_chigee_server.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<dual_protocol_server.cpp>
    -<compact_dual_server.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<xr2_scanner.cpp>
    -<xr2_rssi_tracker.cpp>
    -<xr2_protocol_analyzer.cpp>
    -<chigee_obd_emulator.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== CHIGEE OBD MODULE EMULATOR =====
[env:esp32_chigee_emulator]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=3

; Emulate Chigee OBD module - advertise as CHIGEE-XXXX for XR-2 to connect
build_src_filter = 
    +<chigee_obd_emulator.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<dual_protocol_server.cpp>
    -<compact_dual_server.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<xr2_scanner.cpp>
    -<xr2_rssi_tracker.cpp>
    -<xr2_protocol_analyzer.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== XR-2 PROTOCOL ANALYZER =====
[env:esp32_protocol_analyzer]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=3

; Connect to XR-2 and analyze Bluetooth communication protocol
build_src_filter = 
    +<xr2_protocol_analyzer.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<dual_protocol_server.cpp>
    -<compact_dual_server.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<xr2_scanner.cpp>
    -<xr2_rssi_tracker.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== XR-2 RSSI TRACKER =====
[env:esp32_rssi_tracker]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=3

; Track RSSI changes to identify XR-2 when turning on/off
build_src_filter = 
    +<xr2_rssi_tracker.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<dual_protocol_server.cpp>
    -<compact_dual_server.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<xr2_scanner.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== COMPACT DUAL PROTOCOL SERVER =====
[env:esp32_compact_server]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=0
    -Os

; Minimal WiFi + Bluetooth OBD server
build_src_filter = 
    +<compact_dual_server.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<dual_protocol_server.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== DUAL PROTOCOL SERVER =====
[env:esp32_dual_server]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
    -DCORE_DEBUG_LEVEL=0
    -Os
    -DCONFIG_BT_NIMBLE_MAX_CONNECTIONS=1
    -DCONFIG_NIMBLE_MALLOC_IN_PSRAM=y
board_build.partitions = huge_app.csv
lib_deps = 
    ArduinoJson

; WiFi + Bluetooth OBD server for XR-2 compatibility
build_src_filter = 
    +<dual_protocol_server.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<modules/>
    -<config/>
    -<tests/>

; ===== SHARED CONFIGURATION =====
[env]
; Upload configuration
monitor_speed = 115200
upload_speed = 921600
upload_port = COM*

; Build flags
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DARDUINO_RUNNING_CORE=1
    -DARDUINO_EVENT_RUNNING_CORE=1
    -DPROJECT_VERSION=\"3.0.0\"
    -DENABLE_DEBUG_OUTPUT=1
    -DESP32_WROOM_32=1
    
; ===== LIBRARY DEPENDENCIES =====
lib_deps = 
    ESP32 BLE Arduino
    Preferences
    BluetoothSerial
    ArduinoJson

; ===== BLE CHIGEE SERVER =====
[env:esp32_ble_chigee]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
upload_port = COM4
build_flags = -DCORE_DEBUG_LEVEL=3

; BLE server for XR-2 OBD connection
build_src_filter = 
    +<ble_chigee_server.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<simple_chigee_server.cpp>
    -<modules/>
    -<config/>
    -<tests/>

lib_deps = 
    ESP32 BLE Arduino

; ===== SIMPLE BLE OBD SERVER =====
[env:esp32_simple_ble]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
upload_port = COM4
build_flags = -DCORE_DEBUG_LEVEL=3

; Single characteristic approach
build_src_filter = 
    +<simple_ble_obd.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<ble_chigee_server.cpp>
    -<modules/>
    -<config/>
    -<tests/>

lib_deps = 
    ESP32 BLE Arduino

; ===== SIMPLE BLE OBD SERVER WITH IPC =====
[env:esp32_simple_ble_ipc]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
upload_port = COM4
build_flags = -DCORE_DEBUG_LEVEL=3

; IPC validation implementation
build_src_filter = 
    src_filter = +<simple_ble_obd_ipc.cpp>
    -<main.cpp>
    -<test_main.cpp>
    -<test_simple.cpp>
    -<test_elm327.cpp>
    -<bluetooth_scanner.cpp>
    -<simple_scanner.cpp>
    -<ble_chigee_server.cpp>
    -<simple_ble_obd.cpp>
    -<modules/>
    -<config/>
    -<tests/>

lib_deps = 
    ESP32 BLE Arduino